# Project Submission Answers

# 1. It is necessary for the fork() command to be used before the exec() system call for several reasons.  When exec() is called, it replaces whatever the current process image is with a new program.  This can overwrite a previous program.  By using fork() first, we can create a brand new space for the child process that does not interfere or overwrite the original parent process. It also allows the shell to run multiple commands simultaneously. So instead of having to stop everything and execute only the last process called, the shell can perform a process in the background and still accept user input/commands and operate in the foreground.


# 2. Whent fprintf() was called it had to step through multiple layers within the OS and C runtie library in order to write to a file.  It first takes the necessary parameters such as a file pointer, format strings and possibly additional arguments and runs them through the C standard library where the parameters are parsed.  Once this is complete, it initiates a system call to the operating system kernal to perform I/O operations manage file descriptors. Eventually, it calls the write() system call within the kernal to write the data to the designated file descriptor.  During this process the kernal manages the necessary device drivers necessary to facilitate writing the data to drives or memory locations.  If there is any errors in this process fprintf() will return a negative value to indicate there was an error.